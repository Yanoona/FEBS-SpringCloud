server:
  port: 8102

spring:
  application:
    name: FEBS-Auth
  security:
    user:
      name: febs
      password: 123456
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    lettuce:
      pool:
        min-idle: 8
        max-idle: 500
        max-active: 2000
        max-wait: 10000
    timeout: 5000
  datasource:
    dynamic:
      #数据库连接池使用的是Hikari，Spring Boot2.0后官方推荐使用该连接池，特点是响应速度快。
      hikari:
        connection-timeout: 30000
        max-lifetime: 1800000
        max-pool-size: 15
        min-idle: 5
        connection-test-query: select 1
        pool-name: FebsHikariCP
      primary: base
      datasource:
        base:
          username: root
          password: root
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://localhost:3306/febs_cloud_base2?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2b8
  boot:
    admin:
      client:
        url: http://localhost:8106
        username: root
        password: 123456
eureka:
  instance:
    #向Eureka 服务端发送心跳的间隔时间，单位为秒，用于服务续约。
    lease-renewal-interval-in-seconds: 20
    hostname: localhost
  client:
    #为true时表示将当前服务注册到Eureak服务端
    register-with-eureka: true
    #为true时表示从Eureka 服务端获取注册的服务信息
    fetch-registry: true
    #新实例信息的变化到Eureka服务端的间隔时间，单位为秒
    instance-info-replication-interval-seconds: 30
    #默认值为30秒，即每30秒去Eureka服务端上获取服务并缓存，这里指定为3秒的原因是方便开发时测试，实际可以指定为默认值即可；
    registry-fetch-interval-seconds: 3
    serviceUrl:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:8101/register/eureka/

mybatis-plus:
  #指定别名扫描路径，这个路径后续在febs-common模块里定义，该路径下的实体类将自动配置别名，默认为类名首字母小写。
  type-aliases-package: com.yan.febscommon.entity.system
  #指定MyBatis XML文件路径
  mapper-locations: classpath:mapper/*.xml
  #指定为null，否则插入空值时会报“无效的列类型”错误
  configuration:
    jdbc-type-for-null: null
  #设置为false关闭MyBatis Plus Banner打印
  global-config:
    banner: false

#SpringBootAdmin客户端的信息
info:
  app:
    name: ${spring.application.name}
    description: "@project.description@"
    version: "@project.version@"

management:
  #将客户端的所有监控端点都暴露给SBA服务端
  endpoints:
    web:
      exposure:
        include: "*"
  #将客户端的健康信息总是显示
  endpoint:
    health:
      show-details: always